# Contract

## Backend
Contract untuk backend digunakan sebagai panduan menyusun (formatting) data yang dikirimkan ke UI sehingga data tersebut dapat diterjamahkan oleh Component. Pengiriman data yang tidak sesuai dengan kontrak akan menyebabkan data tidak ditampilkan dengan benar.

## Frontend
Contract untuk backend digunakan sebagai panduan dalam pembuatan UI component(pembacaan parameter dari APi yang diterima atau juga slot yang digunakan untuk melakukan customisasi component).

### 1. Page Create
Contract format data dari backend ke UI untuk requet halaman Create.

#### Struktur Data

	Data 
	 |_ Page Info
	 |_ Page Data
	 	 |_ Group of Elements
	 	 	 |_ Header
	 	 	 |_ Data
	 	 	 	 |_ Element Description

Keterangan : 	 	 	 	 

#### Format pengiriman data

	[
	    'page_info' => [
	        'id' => Id data yang dikirim (set null jika tidak ada)
	    ],
	    'page_data' => [
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        NAMA GROUP => [
	            'header'=> array dari nama field yang akan ditampilkan
	            'data' => [
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ],  
	                NAMA FIELD => [
	                    'element-class'      => nama element class yang digunakan,
	                    'element-type'       => nama tipe element yang digunakan',
	                    'element-properties' =>  [
	                        'value'      => nilai data,
	                        'validation' => array validasi
	                    ]
	                ], 
	                dst....
	            ]
	        ],
	        dst....	
	    ]
	]


