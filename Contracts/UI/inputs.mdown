###Inputs
version 0.1

####1. input-string
Description : input with string type 

Data Backend : string value

Parameter Backend : 

	name : input name [string value],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10]

Output Format UI : none

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your global css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)
	

####2. input-datetime
Description : input for datetime

Data Backend : date(YMD HIS) in specified format (GMT)

Parameter Backend : 

	name : input name [string value],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	type : (date, time, datetime),
	GMT : integer number(-7,0,7), assign with null will dissable GMT conversion

Output Format UI : Date time value formatted (calculated by GMT set by API)

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your global css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)
	
####3. input-dateTimeRange
Description : input for date time using date time range

Data Backend : date(HIS) in specified format (GMT)

Parameter Backend : 

	name : input name [string value],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	Range : ['start' => date time start, 'end' => date time end]	
	type : (date, time, datetime),
	GMT : integer number(-7,0,7), assign with null will dissable GMT conversion

Output Format UI : Date time value formatted (calculated by GMT set by API)

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your global css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)

####4. input-email
Description : input with email type 

Data backend : data email

Parameter backend :

	name : input name [string value]
	value : input value [string value]
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10]

Output Format UI : none

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your golbal css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)
	
####5. input-password
Description : input with password type.

Data backend : data password

Parameter backend : 

	name : input name [string value]
	value : input value [string value]. This component wont show password to UI. You can leave it as null or it will be just fine too if you dont. We wont assign retrieved password to UI.
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10]

Output Format UI : masked by asterick (*) char. Will not show any given data by backend.

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your golbal css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)
	
####6. input-number
Description : input with number type 

Data backend : data with integer type

Parameter backend :

	name : input name [string value]
	value : input value [string value]
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10]

Output Format UI : none

Validation UI : 

auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your golbal css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class)
	
####7. input-text
Description : input with textarea 

Data backend : data on text format. Can be normal String text, or mark up (HTML)

Parameter Backend : 

	name : input name [string value]
	value : input value [string value]
	validation : array of validation. ie : ['required' => true]	

Output Format UI : none

Validation UI : auto validate input on text typed and focus event. if validation returning false, input will set class "danger". Else, it will set class="success". You can override css by set danger/success class on your golbal css.

Parameter UI : 

	label : input label
	placeholder : input placeholder text
	class : input class styling (ie: if using bootstrap use 'form-control' class or if you're using text editor like summer note you can add "summer-note" class here)
	
