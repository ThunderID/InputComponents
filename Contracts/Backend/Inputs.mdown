##Input Element
Rev 3 (For revision history click [here](https://github.com/ThunderID/ThunderComponents/blob/master/Contracts/Backend/log-inputs.mdown))

###Element-type
This will be set of options of your 'element-type' you can choose  to generate your UI.

####1. input-string
Description : this will generate input with string type 

Data : string value (passed via parameter->value)

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	visible : bool visible state or not 
	
[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'string',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => true or false
	]

####2. input-email
Description : this will generate input with string type 

Data : string value (passed via parameter->value)

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'email',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => bool visible state or not (true or false)
	]

####3. input-hidden
Description : this will generate input hidden type (will not show in UI)

Data : string value (passed via parameter->value)

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : NULL (will not validate anything),
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'email',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => null,
		'visible'    => bool visible state or not (true or false)
	]
	
####4. input-disabled
Description : this will generate input with disabled style

Data : string value (passed via parameter->value)

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : NULL (will not validate anything),
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'email',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => null,
		'visible'    => bool visible state or not (true or false)
	]

####5. input-password
Description : this will generate input with password format

Data : None (password will not displayed)

Parameter : 

	name : input name [string value, use snake case format],
	value : NULL
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'password',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => null,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => bool visible state or not (true or false)
	]

####6. input-number
Description : this will generate input with number format

Data : number format

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'password',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => bool visible state or not (true or false)
	]

####7. input-text
Description : This will generate input with textarea format

Data : Data on text format. Can be normal String text, or mark up (HTML)

Parameter : 

	name : input name [string value, use snake case format],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	visible : bool visible state or not 

[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

How to Use :

	'element-class'      => 'input',
	'element-type'       => 'text',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => bool visible state or not (true or false)
	]
	
####8. input-datetime
Description : input for datetime

Data : date in specified format (GMT)

Parameter : 

	name : input name [string value],
	value : input value [string value],
	validation : array of validation. ie : ['required' => true, 'min' => 1, 'max' => 10],
	format : see available list below,
	visible : bool visible state or not,
	gmt : 	[
				timezone : string timezone value
				timezone_type : string type of timezone
			] 
			or
			Null for no GMT conversion
	
[Snake Case Format](https://en.wikipedia.org/wiki/Snake_case)

Available date format :

	dd/mm/yyyy
	mm/dd/yyyy
	yyyy/mm/dd
	dd-mm-yyyy
	mm-dd-yyyy
	yyyy-mm-dd
	hh:mm:ss
	hh:mm
	mm/yyyy



How to Use :

	'element-class'      => 'input',
	'element-type'       => 'text',
	'element-properties' =>  [
		'name'       => element name,
		'value'      => value passed to element,
		'validation' => array of validation ie : ['required' => true],
		'visible'    => bool visible state or not (true or false),
		'gmt'        => [
							'timezone' => timezone name (WIB, WITA, or WIT),
							'timezone_type' => '2'
					]
	]
